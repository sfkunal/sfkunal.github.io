{"version":3,"file":"static/js/675.01cdb1fa.chunk.js","mappings":"2MAGMA,EAAW,SAAHC,GAAA,IACZC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OAAM,OAE1BC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,MAAM,MAAKF,SAAEL,KACjBM,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,GAAOK,EAAAA,EAAAA,KAAA,KAAGE,KAAMP,EAAKI,SAAEF,EAAOD,KAAcC,EAAOD,OACrD,EAcPJ,EAASW,aAAe,CACtBN,OAAQ,SAACO,GAAC,OAAKA,CAAC,EAChBT,KAAM,KACNC,MAAO,MAGT,QCKA,EA7Bc,SAAHH,GAAA,IAAMY,EAAIZ,EAAJY,KAAI,OACnBL,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACGM,EAAKC,KAAI,SAACC,GAAI,OACbP,EAAAA,EAAAA,KAACR,EAAQ,CACPK,OAAQU,EAAKV,OAEbH,MAAOa,EAAKb,MACZC,KAAMY,EAAKZ,KACXC,MAAOW,EAAKX,OAHPW,EAAKb,MAIV,OAGA,E,UChBJc,EAAM,WACV,IAAAC,GAAsBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzBI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAclB,OANAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,aAAY,kBAPf,WACX,IACMC,EAAY,IAAIC,KAAK,uBAC3BL,IAASK,KAAKC,MAAQF,GAFN,oBAE4BG,QAAQ,IACtD,CAGkCC,EAAM,GAAE,IACxC,OAAO,WACLC,cAAcP,EAChB,CACF,GAAG,KACIhB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAzB,SAAGc,GACZ,EAyDA,EAvDa,CACX,CACEY,IAAK,MACL/B,MAAO,cACPE,OAAOI,EAAAA,EAAAA,KAACQ,EAAG,KAEb,CACEiB,IAAK,YACL/B,MAAO,oBACPE,MAAO,IAIT,CACE6B,IAAK,WACL/B,MAAO,eACPE,MAAO,eAET,CACE6B,IAAK,cACL/B,MAAO,sBACPE,MAAO,IAET,CACE6B,IAAK,QACL/B,MAAO,yBACPE,MAAO,IAET,CACE6B,IAAK,WACL/B,MAAO,qBACPE,MAAO,QAET,CACE6B,IAAK,QACL/B,MAAO,6BACPE,MAAO,SAET,CACE6B,IAAK,SACL/B,MAAO,0BACPE,MAAO,cAET,CACE6B,IAAK,MACL/B,MAAO,gBACPE,MAAO,0BAET,CACE6B,IAAK,KACL/B,MAAO,2BACPE,MAAO,MC5DX,EAPsB,WAAH,OACjBE,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAzB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAC0B,EAAK,CAACrB,KAAMA,MACZ,ECiBL,EAjBc,WAAH,OACTL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHC,MAAM,QACNC,YAAY,2DAA0D9B,UAEtED,EAAAA,EAAAA,MAAA,WAASgC,UAAU,OAAOC,GAAG,QAAOhC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,QAAO/B,UACpBC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACC,GAAG,SAAQlC,SAAC,iBAG1BC,EAAAA,EAAAA,KAACkC,EAAQ,QAGN,C","sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/personal.js","components/Stats/Personal.js","pages/Stats.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({\n  label, link, value, format,\n}) => (\n  <tr>\n    <td width=\"70%\">{label}</td>\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\n  </tr>\n);\n\nTableRow.propTypes = {\n  format: PropTypes.func,\n  label: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n};\n\nTableRow.defaultProps = {\n  format: (x) => x,\n  link: null,\n  value: null,\n};\n\nexport default TableRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableRow from './TableRow';\n\nconst Table = ({ data }) => (\n  <table>\n    <tbody>\n      {data.map((pair) => (\n        <TableRow\n          format={pair.format}\n          key={pair.label}\n          label={pair.label}\n          link={pair.link}\n          value={pair.value}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    format: PropTypes.func,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  })).isRequired,\n};\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\n\nconst Age = () => {\n  const [age, setAge] = useState();\n\n  const tick = () => {\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\n    const birthTime = new Date('2002-11-20T22:24:00');\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => tick(), 25);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return <>{age}</>;\n};\n\nconst data = [\n  {\n    key: 'age',\n    label: 'Current age',\n    value: <Age />,\n  },\n  {\n    key: 'countries',\n    label: 'Countries visited',\n    value: 36,\n    // link:\n    //   'https://www.google.com/maps/d/embed?mid=1iBBTscqateQ93pWFVfHCUZXoDu8&z=2',\n  },\n  {\n    key: 'location',\n    label: 'Current City',\n    value: 'Seattle, WA',\n  },\n  {\n    key: 'investments',\n    label: 'Current Investments',\n    value: 57,\n  },\n  {\n    key: 'repos',\n    label: 'Number of GitHub Repos',\n    value: 94,\n  },\n  {\n    key: 'fortnite',\n    label: 'Fortnite K/D Ratio',\n    value: '3.17',\n  },\n  {\n    key: 'music',\n    label: 'Songs added to Apple Music',\n    value: '1,715',\n  },\n  {\n    key: 'artist',\n    label: 'Current Favorite Artist',\n    value: 'Fred Again',\n  },\n  {\n    key: 'LLM',\n    label: 'Most Used LLM',\n    value: 'gpt-3.5-turbo-instruct',\n  },\n  {\n    key: 'lc',\n    label: 'Leetcode Problems Solved',\n    value: 622,\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport Table from './Table';\nimport data from '../../data/stats/personal';\n\nconst PersonalStats = () => (\n  <>\n    <h3>Me in numbers</h3>\n    <Table data={data} />\n  </>\n);\n\nexport default PersonalStats;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Personal from '../components/Stats/Personal';\n// import Site from '../components/Stats/Site';\n\nconst Stats = () => (\n  <Main\n    title=\"Stats\"\n    description=\"Some statistics about Kunal Srivastava and mldangelo.com\"\n  >\n    <article className=\"post\" id=\"stats\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/stats\">Stats</Link></h2>\n        </div>\n      </header>\n      <Personal />\n      {/* <Site /> */}\n    </article>\n  </Main>\n);\n\nexport default Stats;\n"],"names":["TableRow","_ref","label","link","value","format","_jsxs","children","_jsx","width","href","defaultProps","x","data","map","pair","Age","_useState","useState","_useState2","_slicedToArray","age","setAge","useEffect","timer","setInterval","birthTime","Date","now","toFixed","tick","clearInterval","_Fragment","key","Table","Main","title","description","className","id","Link","to","Personal"],"sourceRoot":""}